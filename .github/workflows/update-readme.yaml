name: Generate README on Tags Change

on:
  pull_request:
    branches:
      - main
    paths:
      - tags.yaml
  workflow_dispatch:
    inputs:
      check_all_prs:
        description: 'Check all open pull requests?'
        type: boolean
        required: false
        default: false

jobs:
  generate_readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: tags.yaml

      - name: Run generator if tags.yaml changed
        if: steps.changed-files.outputs.any_changed == 'true' || github.event.inputs.check_all_prs == true
        run: |
          cd generator
          go mod tidy
          go run readme_app.go ../tags.yaml

      - name: Configure Git user
        if: steps.changed-files.outputs.any_changed == 'true' || github.event.inputs.check_all_prs == true
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

      - name: Commit and push changes
        if: steps.changed-files.outputs.any_changed == 'true' || github.event.inputs.check_all_prs == true
        run: |
          git add *.md
          git commit -m "Update READMEs based on tags.yaml changes"
          git push origin ${{ github.head_ref }}

      - name: Check all other PRs
        if: github.event.inputs.check_all_prs == true
        uses: peter-evans/find-pull-requests@v3
        id: find-prs
        with:
          state: open

      - name: Loop through other PRs
        if: github.event.inputs.check_all_prs == true && steps.find-prs.outputs.pull-requests != '[]'
        run: |
          for pr in $(echo '${{ steps.find-prs.outputs.pull-requests }}' | jq -r '.[].number'); do
            echo "Checking PR #$pr"
            git checkout origin/main
            git pull
            git checkout origin/$pr
            git pull
            if [[ -f tags.yaml ]]; then
              echo "tags.yaml found in PR #$pr"
              cd generator
              go mod tidy
              go run readme_app.go ../tags.yaml
              git add *.md
              if [[ $(git status --porcelain) ]]; then
                git config --local user.email "actions@github.com"
                git config --local user.name "GitHub Actions"
                git commit -m "Update READMEs based on tags.yaml changes"
                git push origin $pr
              else
                echo "No changes to commit in PR #$pr"
              fi
            else
              echo "tags.yaml not found in PR #$pr"
            fi
          done